
global bandas_asm
global Aux_bandas

section .data
mascara_rojos: db  00h,80h,80h,80h,04h,80h,80h,80h,08h,80h,80h,80h,0Ch,80h,80h,80h
mascara_verdes: db 01h,80h,80h,80h,05h,80h,80h,80h,09h,80h,80h,80h,0Dh,80h,80h,80h
mascara_azules: db 02h,80h,80h,80h,06h,80h,80h,80h,0Ah,80h,80h,80h,0Eh,80h,80h,80h

comp_96: dd 96, 96, 96, 96
comp_288: dd 288, 288, 288, 288
comp_480: dd 480, 480, 480, 480
comp_672: dd 672, 672, 672, 672

comp_0: dd 0, 0, 0, 0,0, 0, 0, 0,0, 0, 0, 0,0, 0, 0, 0
comp_64: db 64, 64, 64, 64,64, 64, 64, 64,64, 64, 64, 64,64, 64, 64, 64
comp_128: db 128, 128, 128, 128,128, 128, 128, 128,128, 128, 128, 128,128, 128, 128, 128
comp_192: db 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192
comp_255: db 255, 255, 255, 255,255, 255, 255, 255,255, 255, 255, 255,255, 255, 255, 255

section .text
;void bandas_asm    (
	;unsigned char *src, rdi
	;unsigned char *dst, rsi
	;int filas, edx
	;int cols, ecx
	;int src_row_size, r8d
	;int dst_row_size) r9d

bandas_asm:
   	push rbp
    	mov rbp, rsp
	push r12
	push r13
	
	mov r12d, ecx
	xor rcx, rcx 
	mov ecx, r12d
	xor rax, rax
	mov eax, ecx
	mul edx
	mov rcx, rax	
	shr rcx,2 
	movdqu xmm8, [mascara_rojos]
	movdqu xmm9, [mascara_verdes]
	movdqu xmm10, [mascara_azules]   
	mov r12, rdi
	mov r13, rsi  	
.ciclo:
	movdqu xmm0, [r12]  ;xmm0=[Pixel1|Pixel2|Pixel3|Pixel4]
	movdqu xmm1, xmm0 	;xmm1=xmm0
	pshufb xmm1, xmm8 	;xmm1=mascara_rojos(xmm1) 
	movdqu xmm2, xmm0 	;xmm2=xmm0
	pshufb xmm2, xmm9 	;xmm2=mascara_verdes(xmm2)
	movdqu xmm3, xmm0 	;xmm3=xmm0
	pshufb xmm3, xmm10 	;xmm3=mascara_azules(xmm3)
	paddd xmm1, xmm2    ;xmm1=[|Pixel1.r+Pixel1.g|Pixel2.r+Pixel2.g|Pixel3.r+Pixel3.g|Pixel4.r+Pixel4.g]
	paddd xmm1, xmm3    ;xmm1=[|Pixel1.g+Pixel1.b+Pixel1.r|Pixel2.g+Pixel2.b+Pixel2.r|Pixel3.g+Pixel3.b+Pixel3.r|Pixel4.g+Pixel4.b+Pixel4.r]	
	movdqu xmm0, xmm1
	call Aux_bandas
	movdqu [r13], xmm0
	add r12, 16 		;r12=r12+16 Los siguientes elementos
	add r13, 16 		;r13=r13+16 Los siguientes elementos
	loop .ciclo

	pop r13
	pop r12
  	pop rbp
  	ret
 
Aux_bandas: ;xmm0=[|Pixel1.g+Pixel1.b+Pixel1.r|Pixel2.g+Pixel2.b+Pixel2.r|Pixel3.g+Pixel3.b+Pixel3.r|Pixel4.g+Pixel4.b+Pixel4.r]	
	push rbp
	mov rbp, rsp
	
	pxor xmm1,xmm1

	movdqu xmm2, [comp_96] 		;xmm2=96,96,96,96
	movdqu xmm3, xmm2 			;xmm3=96,96,96,96
	pcmpeqd xmm2, xmm0 	  		;xmm2=Pixel1.sum=96,Pixel2.sum=96,Pixel3.sum=96,Pixel4.sum=96
	
	movdqu xmm6, xmm0
	pcmpgtd xmm6, xmm3
	movdqu xmm5, [comp_288] 	;xmm5=288,288,288,288
	pcmpgtd xmm5, xmm0 	  		;xmm5=Pixel1.sum<288,Pixel2.sum<288,Pixel3.sum<288,Pixel4.sum<288
	por xmm2, xmm6 				;xmm2=Pixel1.sum>=96,Pixel2.sum>=96,Pixel3.sum>=96,Pixel4.sum>=96
	pand xmm2, xmm5 			;xmm2=288>Pixel1.sum>=96,288>Pixel2.sum>=96,288>Pixel3.sum>=96,288>Pixel4.sum>=96
	movdqu xmm3, [comp_64] 			;xmm3=64,64,...,64
	pand xmm2, xmm3
	paddd xmm1, xmm2

	movdqu xmm2, [comp_288] 	;xmm2=288,288,288,288
	movdqu xmm3, xmm2 			;xmm3=288,288,288,288
	pcmpeqd xmm2, xmm0 	  		;xmm2=Pixel1.sum=288,Pixel2.sum=288,Pixel3.sum=288,Pixel4.sum=288


	movdqu xmm6, xmm0
	pcmpgtd xmm6, xmm3
	movdqu xmm5, [comp_480] 	;xmm5=480,480,480,480
	pcmpgtd xmm5, xmm0 	  		;xmm5=Pixel1.sum<480,Pixel2.sum<480,Pixel3.sum<480,Pixel4.sum<480
	por xmm2, xmm6 				;xmm2=Pixel1.sum>=288,Pixel2.sum>=288,Pixel3.sum>=288,Pixel4.sum>=288
	pand xmm2, xmm5 			;xmm2=480>Pixel1.sum>=288,480>Pixel2.sum>=288,480>Pixel3.sum>=288,480>Pixel4.sum>=288
	movdqu xmm3, [comp_128] 		;xmm3=128,128,...,128
	pand xmm2, xmm3
	paddd xmm1, xmm2

	movdqu xmm2, [comp_480] 	;xmm2=480,480,480,480
	movdqu xmm3, xmm2 			;xmm3=480,480,480,480
	pcmpeqd xmm2, xmm0 	  		;xmm2=Pixel1.sum=480,Pixel2.sum=480,Pixel3.sum=480,Pixel4.sum=480	
	movdqu xmm6, xmm0
	pcmpgtd xmm6, xmm3 	  		;xmm3=Pixel1.sum>480,Pixel2.sum>480,Pixel3.sum>480,Pixel4.sum>480
	movdqu xmm5, [comp_672] 	;xmm5=672,672,672,672
	pcmpgtd xmm5, xmm0 	  		;xmm5=Pixel1.sum<672,Pixel2.sum<672,Pixel3.sum<672,Pixel4.sum<672
	por xmm2, xmm6 				;xmm2=Pixel1.sum>=480,Pixel2.sum>=480,Pixel3.sum>=480,Pixel4.sum>=480
	pand xmm2, xmm5 			;xmm2=672>Pixel1.sum>=480,672>Pixel2.sum>=480,672>Pixel3.sum>=480,672>Pixel4.sum>=480
	movdqu xmm3, [comp_192] 		;xmm3=192,192,...,192
	pand xmm2, xmm3
	paddd xmm1, xmm2

	movdqu xmm2, [comp_672] 	;xmm2=672,672,672,672
	movdqu xmm3, xmm2 			;xmm3=672,672,672,672
	pcmpeqd xmm2, xmm0 	  		;xmm2=Pixel1.sum=672,Pixel2.sum=672,Pixel3.sum=672,Pixel4.sum=672
	movdqu xmm6, xmm0
	pcmpgtd xmm6, xmm3
	por xmm2, xmm6 				;xmm2=Pixel1.sum>=672,Pixel2.sum>=672,Pixel3.sum>=672,Pixel4.sum>=672
	movdqu xmm3, [comp_255] 		;xmm3=255,255,...,255
	pand xmm2, xmm3 			
	paddd xmm1, xmm2

	movdqu xmm0, xmm1

	pop rbp
	ret
