/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 09 13:15:07 GMT 2018
 */

package org.autotest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.autotest.StackAr;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StackAr_ESTest extends StackAr_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StackAr stackAr0 = new StackAr(3127);
      stackAr0.toString();
      stackAr0.push("[]");
      stackAr0.toString();
      stackAr0.top();
      stackAr0.push("[]");
      stackAr0.get(0);
      stackAr0.toString();
      stackAr0.size();
      stackAr0.get(0);
      stackAr0.isFull();
      stackAr0.isFull();
      stackAr0.isFull();
      stackAr0.isFull();
      stackAr0.isFull();
      // Undeclared exception!
      stackAr0.toString();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      assertTrue(stackAr0.isEmpty());
      
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.top();
      stackAr0.toString();
      stackAr0.push(object0);
      String string0 = "qt";
      stackAr0.top();
      stackAr0.increaseCapacity(1);
      // Undeclared exception!
      try { 
        stackAr0.get(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -9
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.increaseCapacity(1);
      stackAr0.push(object0);
      assertEquals(2, stackAr0.size());
      
      stackAr0.get(1);
      stackAr0.isEmpty();
      stackAr0.top();
      int int0 = stackAr0.size();
      stackAr0.isEmpty();
      int int1 = stackAr0.size();
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.increaseCapacity(1);
      stackAr0.increaseCapacity(1495);
      // Undeclared exception!
      try { 
        stackAr0.push(object0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push((Object) null);
      stackAr0.increaseCapacity(1319);
      stackAr0.isEmpty();
      // Undeclared exception!
      try { 
        stackAr0.pop();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -10
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1751);
      stackAr0.toString();
      stackAr0.isEmpty();
      stackAr0.push("[]");
      stackAr0.isFull();
      stackAr0.top();
      try { 
        stackAr0.get(1751);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 1332;
      StackAr stackAr0 = new StackAr(1332);
      stackAr0.isFull();
      stackAr0.push("[");
      stackAr0.push((Object) null);
      stackAr0.isEmpty();
      try { 
        stackAr0.get(1332);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push((Object) null);
      stackAr0.get(0);
      stackAr0.top();
      stackAr0.pop();
      assertEquals(0, stackAr0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.increaseCapacity(0);
      stackAr0.isFull();
      // Undeclared exception!
      try { 
        stackAr0.push((Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -10
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push("");
      int int0 = 0;
      stackAr0.get(0);
      stackAr0.pop();
      try { 
        stackAr0.pop();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      int int0 = (-696);
      // Undeclared exception!
      try { 
        stackAr0.increaseCapacity((-2191));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StackAr stackAr0 = new StackAr(3953);
      stackAr0.increaseCapacity(3953);
      assertEquals(0, stackAr0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      stackAr0.push((Object) null);
      int int0 = stackAr0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StackAr stackAr0 = null;
      try {
        stackAr0 = new StackAr((-3810));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StackAr stackAr0 = new StackAr(461);
      try { 
        stackAr0.pop();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1600);
      int int0 = stackAr0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StackAr stackAr0 = new StackAr(0);
      boolean boolean0 = stackAr0.isFull();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StackAr stackAr0 = new StackAr(0);
      stackAr0.toString();
      Object object0 = new Object();
      try { 
        stackAr0.push(object0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StackAr stackAr0 = new StackAr(0);
      stackAr0.isEmpty();
      try { 
        stackAr0.push("a");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push("");
      stackAr0.toString();
      Object object0 = new Object();
      stackAr0.pop();
      try { 
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push("");
      stackAr0.top();
      stackAr0.toString();
      stackAr0.toString();
      stackAr0.push("");
      int int0 = 10;
      stackAr0.top();
      stackAr0.push("");
      stackAr0.top();
      Object object0 = new Object();
      stackAr0.top();
      stackAr0.push(object0);
      stackAr0.push("");
      stackAr0.get(0);
      stackAr0.pop();
      try { 
        stackAr0.get(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StackAr stackAr0 = new StackAr(0);
      try { 
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      try { 
        stackAr0.get((-15));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StackAr stackAr0 = new StackAr(0);
      try { 
        stackAr0.get(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.push(object0);
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.push(object0);
      stackAr0.size();
      Object object1 = stackAr0.pop();
      stackAr0.size();
      stackAr0.push((Object) null);
      stackAr0.top();
      stackAr0.isEmpty();
      stackAr0.isFull();
      stackAr0.push(object1);
      stackAr0.push(object1);
      stackAr0.isFull();
      stackAr0.size();
      stackAr0.toString();
      stackAr0.isEmpty();
      assertEquals(5, stackAr0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      stackAr0.push("p38<n*E@EP!'W8C.8");
      assertEquals(1, stackAr0.size());
      
      stackAr0.pop();
      String string0 = stackAr0.toString();
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push(".N$-!$dS_w7Bdsj");
      assertEquals(1, stackAr0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      try { 
        stackAr0.pop();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      boolean boolean0 = stackAr0.isFull();
      assertEquals(0, stackAr0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StackAr stackAr0 = null;
      try {
        stackAr0 = new StackAr((-1616));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      stackAr0.push(object0);
      try { 
        stackAr0.push(object0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.push(object0);
      stackAr0.push("");
      stackAr0.isEmpty();
      stackAr0.pop();
      stackAr0.toString();
      try { 
        stackAr0.get(1495);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push(stackAr0);
      stackAr0.pop();
      try { 
        stackAr0.get((-2519));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      try { 
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.autotest.StackAr", e);
      }
  }
}
